using System;
using MasterServer.Common;
using MasterServer.Core;

namespace MasterServer.GameLogic.GameInterface
{
	// Token: 0x020002E7 RID: 743
	[ConsoleCmdAttributes(CmdName = "gi_test", ArgsSize = 0, Help = "test command for GI stress-testing")]
	[ConsoleCmdAttributes(CmdName = "gi_total_online", ArgsSize = 0, Help = "returns total online users on jabber")]
	[ConsoleCmdAttributes(CmdName = "gi_quit", ArgsSize = 0, Help = "returns total online users on jabber")]
	[ConsoleCmdAttributes(CmdName = "gi_server_status", ArgsSize = 0, Help = "returns service's current status")]
	[ConsoleCmdAttributes(CmdName = "gi_get_login_ip", ArgsSize = 1, Help = "profileId, return loginIP")]
	[ConsoleCmdAttributes(CmdName = "gi_server_online", ArgsSize = 0, Help = "returns online user count per master server")]
	[ConsoleCmdAttributes(CmdName = "gi_send_plain_text_notification", ArgsSize = 3, Help = "profileId,message,timestamp(day:hour:minute)")]
	[ConsoleCmdAttributes(CmdName = "gi_get_announcement", ArgsSize = 0, Help = "Show all announcements")]
	[ConsoleCmdAttributes(CmdName = "gi_get_active_announcement", ArgsSize = 0, Help = "Show all active announcements")]
	[ConsoleCmdAttributes(CmdName = "gi_add_announcement", ArgsSize = 9, Help = "message,start_time(yyyy-mm-ddThh:minutes:seconds),end_time(yyyy-mm-ddThh:minutes:seconds),isSystem[,RepeatTime,Target,ServerName,ChannelType,Place]")]
	[ConsoleCmdAttributes(CmdName = "gi_modify_announcement", ArgsSize = 10, Help = "id,message,start_time(yyyy-mm-ddThh:minutes:seconds),end_time(yyyy-mm-ddThh:minutes:seconds),isSystem,RepeatTime,Target,ServerName,ChannelType,Place")]
	[ConsoleCmdAttributes(CmdName = "gi_delete_announcement", ArgsSize = 1, Help = "id")]
	[ConsoleCmdAttributes(CmdName = "gi_notify_money_given", ArgsSize = 3, Help = "userId,currency,money")]
	[ConsoleCmdAttributes(CmdName = "gi_give_money", ArgsSize = 7, Help = "userId,currency,money,[notify],[message],[transaction],[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_spend_money", ArgsSize = 4, Help = "userId,currency,money,[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_give_item", ArgsSize = 7, Help = "userId,itemName,value,type(month|day|hour),message,notify,[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_extend_item", ArgsSize = 5, Help = "userId,itemName,value,type(month|day|hour), all(optional), message")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_item", ArgsSize = 4, Help = "userId,itemName/customerItemId, [all], [reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_permanent_item", ArgsSize = 4, Help = "userId,itemName/customerItemId, [count], [reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_profile_item", ArgsSize = 3, Help = "profileId,profileItemId,[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_give_coins", ArgsSize = 5, Help = "userId,coins,[notify],[message],[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_give_consumable", ArgsSize = 6, Help = "userId,item,count,[notify],[message],[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_give_randombox", ArgsSize = 4, Help = "userId,item,message,[reason]")]
	[ConsoleCmdAttributes(CmdName = "gi_unlock_item", ArgsSize = 2, Help = "profileId,item")]
	[ConsoleCmdAttributes(CmdName = "gi_unlock_all_items", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_ban_player", ArgsSize = 3, Help = "profileId,offset(month|day|hour),[message]")]
	[ConsoleCmdAttributes(CmdName = "gi_cancel_ban_player", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_mute_player", ArgsSize = 2, Help = "profileId,offset(month|day|hour)")]
	[ConsoleCmdAttributes(CmdName = "gi_cancel_mute_player", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_kick_player", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_force_logout", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_block_purchase", ArgsSize = 2, Help = "Blocks in-game purchase for hard currency,\nParams userId,[notification]")]
	[ConsoleCmdAttributes(CmdName = "gi_unblock_purchase", ArgsSize = 2, Help = "Unblocks in-game purchase for hard currency,\nParams userId,[notification]")]
	[ConsoleCmdAttributes(CmdName = "gi_get_user_id", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_user_id_by_nick", ArgsSize = 1, Help = "nickname")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_id", ArgsSize = 1, Help = "userId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_id_by_nick", ArgsSize = 1, Help = "nickname")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_items", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_default_items", ArgsSize = 0, Help = "returns default profile items")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_achievements", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_all_achievements", ArgsSize = 0, Help = "return list of all availiable achievements")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_unlocked_items", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_sponsor_points", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_persistent_settings", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_contracts", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_clan", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_reset_profile", ArgsSize = 2, Help = "userId,full(optional)")]
	[ConsoleCmdAttributes(CmdName = "gi_set_access_level", ArgsSize = 4, Help = "id,userId,access_level(0,1,2),ip_mask")]
	[ConsoleCmdAttributes(CmdName = "gi_get_access_level", ArgsSize = 1, Help = "userId")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_access_level", ArgsSize = 2, Help = "Id, userId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_clan_info", ArgsSize = 1, Help = "clanId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_clan_info_by_name", ArgsSize = 1, Help = "clanName")]
	[ConsoleCmdAttributes(CmdName = "gi_get_clan_desc", ArgsSize = 1, Help = "clanId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_clan_members", ArgsSize = 1, Help = "clanId")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_clan_member", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_add_clan_member", ArgsSize = 2, Help = "clanId,profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_set_clan_role", ArgsSize = 3, Help = "masterId,profileId,clanRole")]
	[ConsoleCmdAttributes(CmdName = "gi_create_clan", ArgsSize = 3, Help = "masterId,clanName,clanDesc")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_clan", ArgsSize = 1, Help = "masterId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_abuse_by_date", ArgsSize = 4, Help = "start_date(yyyy-mm-dd), end_date(yyyy-mm-dd), count, report_source (optional, 0 = user report, 1 = auto report)")]
	[ConsoleCmdAttributes(CmdName = "gi_get_abuse_to_user", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_abuse_from_user", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_abuse_top", ArgsSize = 1, Help = "top")]
	[ConsoleCmdAttributes(CmdName = "gi_get_abuses_count", ArgsSize = 2, Help = "start_date(yyyy-mm-dd), end_date(yyyy-mm-dd)")]
	[ConsoleCmdAttributes(CmdName = "gi_remote_screenshot_by_pid", ArgsSize = 5, Help = "profileId, [bufferType(b, f), count, scaleW, scaleH]")]
	[ConsoleCmdAttributes(CmdName = "gi_remote_screenshot_by_nick", ArgsSize = 5, Help = "nick, [bufferType(b, f), count, scaleW, scaleH]")]
	[ConsoleCmdAttributes(CmdName = "gi_flush_user_profile", ArgsSize = 1, Help = "userId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_player_stats_telem", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_player_stats", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_unlock_tutorial", ArgsSize = 2, Help = "profileId, tutorial")]
	[ConsoleCmdAttributes(CmdName = "gi_unlock_class", ArgsSize = 2, Help = "profileId, class")]
	[ConsoleCmdAttributes(CmdName = "gi_unlock_mission", ArgsSize = 2, Help = "profileId, missions")]
	[ConsoleCmdAttributes(CmdName = "gi_unlock_achievement", ArgsSize = 2, Help = "profileId, achievementId")]
	[ConsoleCmdAttributes(CmdName = "gi_lock_achievement", ArgsSize = 2, Help = "profileId, achievementId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_progression", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_user_tags", ArgsSize = 1, Help = "userId")]
	[ConsoleCmdAttributes(CmdName = "gi_set_user_tags", ArgsSize = 2, Help = "userId, tags")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_user_tags", ArgsSize = 1, Help = "userId")]
	[ConsoleCmdAttributes(CmdName = "gi_custom_rule_list", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_custom_rule_add", ArgsSize = 1, Help = "ruleConfig")]
	[ConsoleCmdAttributes(CmdName = "gi_custom_rule_enable", ArgsSize = 0, Help = "ruleId enable")]
	[ConsoleCmdAttributes(CmdName = "gi_custom_rule_remove", ArgsSize = 1, Help = "ruleId")]
	[ConsoleCmdAttributes(CmdName = "gi_add_exp", ArgsSize = 2, Help = "profileId, amount")]
	[ConsoleCmdAttributes(CmdName = "gi_add_money", ArgsSize = 3, Help = "profileId, currency, amount")]
	[ConsoleCmdAttributes(CmdName = "gi_get_money", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_info_ex", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_all_items", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_get_friends", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_recover_vouchers", ArgsSize = 0, Help = "Trigger voucher recovery")]
	[ConsoleCmdAttributes(CmdName = "gi_reload_offers", ArgsSize = 0, Help = "Trigger offers reload from disc")]
	[ConsoleCmdAttributes(CmdName = "gi_load_offers", ArgsSize = 0, Help = "Trigger offers load from DB")]
	[ConsoleCmdAttributes(CmdName = "gi_set_observer", ArgsSize = 2, Help = "profileId, set(0,1)")]
	[ConsoleCmdAttributes(CmdName = "gi_add_friend", ArgsSize = 2, Help = "profileId, target")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_friend", ArgsSize = 2, Help = "profileId, target")]
	[ConsoleCmdAttributes(CmdName = "gi_get_pending_friends", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_respond_to_notification", ArgsSize = 3, Help = "profileId, notificationID, accept")]
	[ConsoleCmdAttributes(CmdName = "gi_invite_clan_member", ArgsSize = 2, Help = "profileId, target")]
	[ConsoleCmdAttributes(CmdName = "gi_leave_clan", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_get_pending_clans", ArgsSize = 1, Help = "profileId")]
	[ConsoleCmdAttributes(CmdName = "gi_create_room", ArgsSize = 9, Help = "master_id, room_ref, mission_type, [manual_start, allow_manual_join, locked_spectator_camera, round_limit, preround_time, overtime_mode]")]
	[ConsoleCmdAttributes(CmdName = "gi_get_room_info_by_ref", ArgsSize = 2, Help = "master_id, room_ref]")]
	[ConsoleCmdAttributes(CmdName = "gi_add_player_to_room", Help = "master_id, room_ref, [profile_id|nickname](:group_id), ...")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_player_from_room", Help = "master_id, room_ref, [profile_id|nickname], ...")]
	[ConsoleCmdAttributes(CmdName = "gi_start_room", ArgsSize = 4, Help = "master_id, room_ref, [team1Score], [team2Score]")]
	[ConsoleCmdAttributes(CmdName = "gi_pause_session", ArgsSize = 2, Help = "master_id, room_ref")]
	[ConsoleCmdAttributes(CmdName = "gi_resume_session", ArgsSize = 2, Help = "master_id, room_ref")]
	[ConsoleCmdAttributes(CmdName = "gi_stop_session", ArgsSize = 2, Help = "master_id, room_ref")]
	[ConsoleCmdAttributes(CmdName = "gi_set_client_versions", ArgsSize = 100, Help = "version_1, ..., version_N")]
	[ConsoleCmdAttributes(CmdName = "gi_add_client_versions", ArgsSize = 100, Help = "version_1, ..., version_N")]
	[ConsoleCmdAttributes(CmdName = "gi_remove_client_versions", ArgsSize = 100, Help = "version_1, ..., version_N")]
	[ConsoleCmdAttributes(CmdName = "gi_reload_client_versions", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_dump_client_versions", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_test_ttl", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_test_max_length", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_test_route", ArgsSize = 0, Help = "")]
	[ConsoleCmdAttributes(CmdName = "gi_test_access_level_admin", Help = "Command is testing Admin access level availability")]
	[ConsoleCmdAttributes(CmdName = "gi_test_access_level_basic", Help = "Command is testing Basic access level availability")]
	[ConsoleCmdAttributes(CmdName = "gi_test_access_level_moderator", Help = "Command is testing Moderator access level availability")]
	[ConsoleCmdAttributes(CmdName = "gi_test_access_level_debug", Help = "Command is testing Debug access level availability")]
	[ConsoleCmdAttributes(CmdName = "gi_get_rating_season_status", Help = "Command to get rating season status")]
	[ConsoleCmdAttributes(CmdName = "gi_get_profile_rating_points", Help = "Command to get rating points of the specified profile")]
	[ConsoleCmdAttributes(CmdName = "gi_set_profile_rating_points", Help = "Command to set rating points of the specified profile")]
	[ConsoleCmdAttributes(CmdName = "gi_get_top_rating_profiles", Help = "Command to get top rating profiles")]
	[ConsoleCmdAttributes(CmdName = "gi_rating_game_ban", Help = "Command to ban player in rating games per profile_id [time_out_sec, message]")]
	[ConsoleCmdAttributes(CmdName = "gi_rating_game_unban", Help = "Command to unban player in rating games per profile_id")]
	[ConsoleCmdAttributes(CmdName = "gi_validate_authorization_token", Help = "Validates authorization token for user specified by user_id")]
	internal class GiConsoleCmd : IConsoleCmd
	{
		// Token: 0x0600115F RID: 4447 RVA: 0x00044BF8 File Offset: 0x00042FF8
		public void ExecuteCmd(string[] args)
		{
			try
			{
				string text = Utils.CreateFormatedString(args);
				string p = GameInterfaceCmd.Execute(AccessLevel.Debug, text.Trim());
				Log.Info<string, string>("[{0}]: {1}", args[0], p);
			}
			catch (Exception ex)
			{
				Log.Info<string, string>("[{0}] FAILED: {1}", args[0], ex.Message);
				Log.Warning(ex);
			}
		}
	}
}
